#include <GLHeaders.h>
#include <OGLExtensions.h>

//To be removed and switched to LOG?
#include <stdio.h>

PFNGLBINDBUFFERARBPROC glBindBufferARB;
PFNGLDELETEBUFFERSARBPROC glDeleteBuffersARB;

PFNGLACTIVETEXTUREPROC glActiveTexture;
PFNGLCLIENTACTIVETEXTUREARBPROC	glClientActiveTextureARB;

PFNGLGENBUFFERSARBPROC glGenBuffersARB;
PFNGLBUFFERDATAARBPROC glBufferDataARB;
PFNGLDRAWRANGEELEMENTSPROC glDrawRangeElements;



PFNGLCREATEPROGRAMOBJECTARBPROC		glCreateProgramObjectARB;
PFNGLDELETEOBJECTARBPROC			glDeleteObjectARB;
PFNGLDETACHOBJECTARBPROC			glDetachObjectARB;
PFNGLGETATTACHEDOBJECTSARBPROC		glGetAttachedObjectsARB;
PFNGLUSEPROGRAMOBJECTARBPROC		glUseProgramObjectARB;
PFNGLCREATESHADEROBJECTARBPROC		glCreateShaderObjectARB ;
PFNGLSHADERSOURCEARBPROC			glShaderSourceARB;
PFNGLCOMPILESHADERARBPROC			glCompileShaderARB;
PFNGLGETOBJECTPARAMETERIVARBPROC	glGetObjectParameterivARB;
PFNGLATTACHOBJECTARBPROC			glAttachObjectARB;
PFNGLGETINFOLOGARBPROC				glGetInfoLogARB;
PFNGLLINKPROGRAMARBPROC				glLinkProgramARB;
PFNGLGETUNIFORMLOCATIONARBPROC		glGetUniformLocationARB;
PFNGLPROGRAMPARAMETERIEXTPROC		glProgramParameteriEXT;
PFNGLGETACTIVEUNIFORMARBPROC		glGetActiveUniformARB;
PFNGLUNIFORM1IARBPROC				glUniform1iARB;
PFNGLUNIFORM4FVARBPROC				glUniform4fvARB;

PFNGLDELETEFRAMEBUFFERSEXTPROC		glDeleteFramebuffersEXT;
PFNGLGENRENDERBUFFERSEXTPROC		glGenRenderbuffersEXT;
PFNGLDELETERENDERBUFFERSEXTPROC		glDeleteRenderbuffersEXT;
PFNGLGENFRAMEBUFFERSEXTPROC			glGenFramebuffersEXT;
PFNGLBINDRENDERBUFFEREXTPROC		glBindRenderbufferEXT;
PFNGLRENDERBUFFERSTORAGEEXTPROC		glRenderbufferStorageEXT;
PFNGLBINDFRAMEBUFFEREXTPROC			glBindFramebufferEXT;
PFNGLFRAMEBUFFERTEXTURE2DEXTPROC	glFramebufferTexture2DEXT;
PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC	glFramebufferRenderbufferEXT;
PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC	glCheckFramebufferStatusEXT;
PFNGLDRAWBUFFERSARBPROC				glDrawBuffersARB;
PFNGLUNIFORMMATRIX4FVARBPROC		glUniformMatrix4fvARB;

#define EXTENSION( proc, name ) \
	name = (proc)wglGetProcAddress( #name ); \
	if( !name ) \
	{ \
		fprintf( stderr, "Error.  Could not load extensions: %s\n", #name ); \
	}

void SetupOGLExtensions()
{
EXTENSION( PFNGLBINDBUFFERARBPROC, glBindBufferARB );
EXTENSION( PFNGLDELETEBUFFERSARBPROC,glDeleteBuffersARB );
EXTENSION( PFNGLACTIVETEXTUREPROC,glActiveTexture );
EXTENSION( PFNGLCLIENTACTIVETEXTUREARBPROC,glClientActiveTextureARB );
EXTENSION( PFNGLGENBUFFERSARBPROC,glGenBuffersARB );
EXTENSION( PFNGLBUFFERDATAARBPROC,glBufferDataARB );
EXTENSION( PFNGLDRAWRANGEELEMENTSPROC,glDrawRangeElements );


EXTENSION( PFNGLCREATEPROGRAMOBJECTARBPROC,glCreateProgramObjectARB );
EXTENSION( PFNGLDELETEOBJECTARBPROC,glDeleteObjectARB );
EXTENSION( PFNGLDETACHOBJECTARBPROC,glDetachObjectARB );
EXTENSION( PFNGLGETATTACHEDOBJECTSARBPROC,glGetAttachedObjectsARB );
EXTENSION( PFNGLUSEPROGRAMOBJECTARBPROC,glUseProgramObjectARB );
EXTENSION( PFNGLCREATESHADEROBJECTARBPROC,glCreateShaderObjectARB );
EXTENSION( PFNGLSHADERSOURCEARBPROC,glShaderSourceARB );
EXTENSION( PFNGLCOMPILESHADERARBPROC,glCompileShaderARB );
EXTENSION( PFNGLGETOBJECTPARAMETERIVARBPROC,glGetObjectParameterivARB );
EXTENSION( PFNGLATTACHOBJECTARBPROC,glAttachObjectARB );
EXTENSION( PFNGLGETINFOLOGARBPROC,glGetInfoLogARB );
EXTENSION( PFNGLLINKPROGRAMARBPROC,glLinkProgramARB );
EXTENSION( PFNGLGETUNIFORMLOCATIONARBPROC,glGetUniformLocationARB );
EXTENSION( PFNGLPROGRAMPARAMETERIEXTPROC,glProgramParameteriEXT );
EXTENSION( PFNGLGETACTIVEUNIFORMARBPROC,glGetActiveUniformARB );
EXTENSION( PFNGLUNIFORM1IARBPROC,glUniform1iARB );
EXTENSION( PFNGLUNIFORM4FVARBPROC,glUniform4fvARB );
EXTENSION( PFNGLUNIFORMMATRIX4FVARBPROC, glUniformMatrix4fvARB );


EXTENSION( PFNGLDELETEFRAMEBUFFERSEXTPROC, glDeleteFramebuffersEXT );
EXTENSION( PFNGLGENRENDERBUFFERSEXTPROC, glGenRenderbuffersEXT );
EXTENSION( PFNGLDELETERENDERBUFFERSEXTPROC, glDeleteRenderbuffersEXT );
EXTENSION( PFNGLGENFRAMEBUFFERSEXTPROC, glGenFramebuffersEXT );
EXTENSION( PFNGLBINDRENDERBUFFEREXTPROC, glBindRenderbufferEXT );
EXTENSION( PFNGLRENDERBUFFERSTORAGEEXTPROC, glRenderbufferStorageEXT );
EXTENSION( PFNGLBINDFRAMEBUFFEREXTPROC, glBindFramebufferEXT );
EXTENSION( PFNGLFRAMEBUFFERTEXTURE2DEXTPROC, glFramebufferTexture2DEXT );
EXTENSION( PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC, glFramebufferRenderbufferEXT );
EXTENSION( PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC, glCheckFramebufferStatusEXT );
EXTENSION( PFNGLDRAWBUFFERSARBPROC, glDrawBuffersARB );
}
